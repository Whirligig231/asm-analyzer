digraph G {
rankdir=BT;

node [
fontname = "Bitstream Vera Sans"
fontsize = 8
shape = "record"
]
edge [
fontname = "Bitstream Vera Sans"
fontsize = 8
]
analyzer_model_pattern_CompositeClass [
	label = "{analyzer.model.pattern.CompositeClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_TargetClass [
	label = "{analyzer.model.pattern.TargetClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_DecoratorClass [
	label = "{analyzer.model.pattern.DecoratorClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_DecoratorPattern [
	label = "{analyzer.model.pattern.DecoratorPattern||public \<init\>() : void\l}"
]
analyzer_model_pattern_Pattern [
	label = "{analyzer.model.pattern.Pattern|private classes : java_util_Collection\lprivate name : java_lang_String\lprivate color : java_awt_Color\l|public \<init\>(java.lang.String, java.awt.Color) : void\lpublic accept(analyzer.visitor.common.IVisitor) : void\lpublic getName() : java.lang.String\lpublic iterator() : java.util.Iterator\lpublic getColor() : java.awt.Color\lpublic addClass(analyzer.model.IClass) : void\l}"
]
java_io_Reader [
	label = "{java.io.Reader\n\<\<Component\>\>|protected lock : java_lang_Object\lprivate skipBuffer : char[]\lprivate maxSkipBufferSize : int\l|public read(char[], int, int) : int\lpublic read(char[]) : int\lpublic read() : int\lpublic markSupported() : boolean\lpublic mark(int) : void\lprotected \<init\>(java.lang.Object) : void\lpublic read(java.nio.CharBuffer) : int\lpublic reset() : void\lprotected \<init\>() : void\lpublic ready() : boolean\lpublic skip(long) : long\lpublic close() : void\l}"
, color="#00ff00"]
analyzer_model_pattern_AdapterPattern [
	label = "{analyzer.model.pattern.AdapterPattern||public \<init\>() : void\l}"
]
java_io_BufferedReader [
	label = "{java.io.BufferedReader\n\<\<Decorator\>\>|private markedChar : int\lprivate cb : char[]\lprivate nextChar : int\lprivate UNMARKED : int\lprivate in : java_io_Reader\lnull lock : java_lang_Object\lprivate INVALIDATED : int\lprivate defaultCharBufferSize : int\lprivate defaultExpectedLineLength : int\lprivate markedSkipLF : boolean\lprivate readAheadLimit : int\lprivate nChars : int\lprivate skipLF : boolean\l|private read1(char[], int, int) : int\lpublic readLine() : java.lang.String\lpublic mark(int) : void\lnull \<init\>(java.io.BufferedReader) : void\lpublic ready() : boolean\lpublic skip(long) : long\ldefault readLine(boolean) : java.lang.String\lpublic read(char[], int, int) : int\lpublic lines() : java.util.stream.Stream\lpublic \<init\>(java.io.Reader, int) : void\lpublic read() : int\lpublic markSupported() : boolean\ldefault \<clinit\>() : void\lpublic reset() : void\lprivate ensureOpen() : void\lpublic \<init\>(java.io.Reader) : void\lprivate fill() : void\lpublic close() : void\l}"
, color="#00ff00"]
analyzer_model_pattern_SingletonClass [
	label = "{analyzer.model.pattern.SingletonClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_SingletonPattern [
	label = "{analyzer.model.pattern.SingletonPattern||public \<init\>() : void\l}"
]
org_objectweb_asm_ClassVisitor [
	label = "{org.objectweb.asm.ClassVisitor\n\<\<Class\>\>|protected api : int\lprotected cv : org_objectweb_asm_ClassVisitor\l|public visitTypeAnnotation(int, org.objectweb.asm.TypePath, java.lang.String, boolean) : org.objectweb.asm.AnnotationVisitor\lpublic visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) : void\lpublic visitEnd() : void\lpublic \<init\>(int) : void\lpublic visitAttribute(org.objectweb.asm.Attribute) : void\lpublic \<init\>(int, org.objectweb.asm.ClassVisitor) : void\lpublic visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) : org.objectweb.asm.MethodVisitor\lpublic visitOuterClass(java.lang.String, java.lang.String, java.lang.String) : void\lpublic visitAnnotation(java.lang.String, boolean) : org.objectweb.asm.AnnotationVisitor\lpublic visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int) : void\lpublic visitSource(java.lang.String, java.lang.String) : void\lpublic visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) : org.objectweb.asm.FieldVisitor\l}"
, color="#00ffff"]
java_lang_Runtime [
	label = "{java.lang.Runtime\n\<\<Singleton\>\>|private currentRuntime : java_lang_Runtime\l|public gc() : void\lpublic getRuntime() : java.lang.Runtime\lpublic exec(java.lang.String[], java.lang.String[], java.io.File) : java.lang.Process\lpublic traceMethodCalls(boolean) : void\lpublic addShutdownHook(java.lang.Thread) : void\lpublic runFinalization() : void\lpublic loadLibrary(java.lang.String) : void\lprivate runFinalization0() : void\lpublic getLocalizedOutputStream(java.io.OutputStream) : java.io.OutputStream\lpublic availableProcessors() : int\lpublic maxMemory() : long\lpublic halt(int) : void\ldefault load0(java.lang.Class, java.lang.String) : void\lpublic removeShutdownHook(java.lang.Thread) : boolean\lpublic exec(java.lang.String, java.lang.String[]) : java.lang.Process\lpublic exec(java.lang.String[]) : java.lang.Process\lpublic traceInstructions(boolean) : void\lpublic exec(java.lang.String) : java.lang.Process\lpublic freeMemory() : long\lpublic totalMemory() : long\lpublic exit(int) : void\ldefault loadLibrary0(java.lang.Class, java.lang.String) : void\lpublic exec(java.lang.String, java.lang.String[], java.io.File) : java.lang.Process\lpublic load(java.lang.String) : void\lpublic getLocalizedInputStream(java.io.InputStream) : java.io.InputStream\lpublic runFinalizersOnExit(boolean) : void\lpublic exec(java.lang.String[], java.lang.String[]) : java.lang.Process\ldefault \<clinit\>() : void\lprivate \<init\>() : void\l}"
, color="#0000ff"]
analyzer_model_pattern_AdapterClass [
	label = "{analyzer.model.pattern.AdapterClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_IAnnotatedRelation [
	label = "{analyzer.model.pattern.IAnnotatedRelation||public getAnnotation() : java.lang.String\lpublic getColor() : java.awt.Color\l}"
]
analyzer_model_pattern_DecoratorComponentClass [
	label = "{analyzer.model.pattern.DecoratorComponentClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_CompositeComponentClass [
	label = "{analyzer.model.pattern.CompositeComponentClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_CompositePattern [
	label = "{analyzer.model.pattern.CompositePattern||public \<init\>() : void\l}"
]
analyzer_model_pattern_IPattern [
	label = "{analyzer.model.pattern.IPattern||public getName() : java.lang.String\lpublic getColor() : java.awt.Color\lpublic addClass(analyzer.model.IClass) : void\l}"
]
analyzer_model_pattern_IAnnotatedClass [
	label = "{analyzer.model.pattern.IAnnotatedClass\n\<\<Class\>\>||public getAnnotation() : java.lang.String\lpublic getColor() : java.awt.Color\l}"
, color="#00ffff"]
analyzer_model_pattern_ClassClass [
	label = "{analyzer.model.pattern.ClassClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_AnnotatedRelation [
	label = "{analyzer.model.pattern.AnnotatedRelation|private annotation : java_lang_String\lprivate color : java_awt_Color\lprivate decorated : analyzer_model_IRelation\l|public hashCode() : int\lpublic \<init\>(analyzer.model.IRelation, java.lang.String, java.awt.Color) : void\lpublic getSecondClass() : analyzer.model.IClass\lpublic accept(analyzer.visitor.common.IVisitor) : void\lpublic getType() : analyzer.model.RelationType\lpublic setFirstClass(analyzer.model.IClass) : void\lpublic \<init\>(analyzer.model.IRelation, java.lang.String) : void\lpublic getColor() : java.awt.Color\lpublic equals(java.lang.Object) : boolean\lpublic setSecondClass(analyzer.model.IClass) : void\lpublic getFirstClass() : analyzer.model.IClass\lpublic setType(analyzer.model.RelationType) : void\lpublic getAnnotation() : java.lang.String\l}"
]
analyzer_model_pattern_ClassPattern [
	label = "{analyzer.model.pattern.ClassPattern\n\<\<Class\>\>||public \<init\>() : void\l}"
, color="#00ffff"]
analyzer_model_pattern_AdaptsRelation [
	label = "{analyzer.model.pattern.AdaptsRelation||public \<init\>(analyzer.model.IRelation) : void\l}"
]
analyzer_model_pattern_LeafClass [
	label = "{analyzer.model.pattern.LeafClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_AnnotatedClass [
	label = "{analyzer.model.pattern.AnnotatedClass\n\<\<Class\>\>|private annotation : java_lang_String\lprivate color : java_awt_Color\lprivate decorated : analyzer_model_IClass\l|public getAccessLevel() : analyzer.model.AccessLevel\lpublic getFieldIterator() : java.util.Iterator\lpublic setAccessLevel(analyzer.model.AccessLevel) : void\lpublic accept(analyzer.visitor.common.IVisitor) : void\lpublic getOwner() : analyzer.model.IModel\lpublic addField(analyzer.model.IField) : void\lpublic addInterface(analyzer.model.IClass) : void\lpublic getInterfacesIterator() : java.util.Iterator\lpublic getField(java.lang.String, java.lang.String) : analyzer.model.IField\lpublic getColor() : java.awt.Color\lpublic setName(java.lang.String) : void\lpublic setSuperClass(analyzer.model.IClass) : void\lpublic getMethodIterator() : java.util.Iterator\lpublic \<init\>(analyzer.model.IClass, java.lang.String, java.awt.Color) : void\lpublic setOwner(analyzer.model.IModel) : void\lpublic getName() : java.lang.String\lpublic getSuperClass() : analyzer.model.IClass\lpublic addMethod(analyzer.model.IMethod) : void\lpublic getAnnotation() : java.lang.String\lpublic getMethod(java.lang.String, java.lang.String) : analyzer.model.IMethod\l}"
, color="#00ffff"]
analyzer_model_pattern_AdapteeClass [
	label = "{analyzer.model.pattern.AdapteeClass\n\<\<Class\>\>||public \<init\>(analyzer.model.IClass) : void\l}"
, color="#00ffff"]
analyzer_model_pattern_DecoratesRelation [
	label = "{analyzer.model.pattern.DecoratesRelation||public \<init\>(analyzer.model.IRelation) : void\l}"
]
analyzer_model_pattern_TargetClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_DecoratorComponentClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_ClassClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

org_objectweb_asm_ClassVisitor -> org_objectweb_asm_ClassVisitor [
	arrowhead = "vee"
	style = "solid"
]

analyzer_model_pattern_CompositeComponentClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_SingletonClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_DecoratesRelation -> analyzer_model_pattern_AnnotatedRelation [
	arrowhead = "empty"
	style = "solid"
]

java_lang_Runtime -> java_lang_Runtime [
	arrowhead = "vee"
	style = "solid"
]

analyzer_model_pattern_CompositeClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_Pattern -> analyzer_model_pattern_IPattern [
	arrowhead = "empty"
	style = "dashed"
]

analyzer_model_pattern_DecoratorPattern -> analyzer_model_pattern_Pattern [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_AdapterClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_ClassPattern -> analyzer_model_pattern_Pattern [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_SingletonPattern -> analyzer_model_pattern_Pattern [
	arrowhead = "empty"
	style = "solid"
]

java_io_BufferedReader -> java_io_Reader [
	arrowhead = "vee"
	style = "solid"
	label = "\<\<decorates\>\>", color="#000000"
]

java_io_BufferedReader -> java_io_Reader [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_CompositePattern -> analyzer_model_pattern_Pattern [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_LeafClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

analyzer_model_pattern_DecoratorClass -> analyzer_model_pattern_AnnotatedClass [
	arrowhead = "empty"
	style = "solid"
]

}
