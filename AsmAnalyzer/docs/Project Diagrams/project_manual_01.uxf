<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>320</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.asm.model::IClass
--
--
+getName(): String
+getAccessLevel(): AccessLevel
+getSuperClass(): String
+getInterfaces(): String[]
+setName(String name): void
+setAccessLevel(AccessLevel accessLevel): void
+setSuperClass(String superClass): void
+setInterfaces(String[] interfaces): void
+getMethodIterator(): Iterator&lt;IMethod&gt;
+addMethod(IMethod method): void
+getFieldIterator(): Iterator&lt;IField&gt;
+addField(IField field): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>0</y>
      <w>320</w>
      <h>280</h>
    </coordinates>
    <panel_attributes>problem.asm.model::Method
--
-name: String
-accessLevel: AccessLevel
-returnType: String
-argTypes: String[]
--
+getName(): String
+getAccessLevel(): AccessLevel
+getReturnType(): String
+getArgTypes(): String[]
+setName(String name): void
+setAccessLevel(AccessLevel accessLevel): void
+setReturnType(String returnType): void
+setArgTypes(String[] argTypes): void
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>0</y>
      <w>320</w>
      <h>230</h>
    </coordinates>
    <panel_attributes>problem.asm.model::Field
--
-name: String
-accessLevel: AccessLevel
-type: String
--
+getName(): String
+getAccessLevel(): AccessLevel
+getType(): String
+setName(String name): void
+setAccessLevel(AccessLevel accessLevel): void
+setType(String type): void
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>990</x>
      <y>0</y>
      <w>320</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.asm.model::IMethod
--
--
+getName(): String
+getAccessLevel(): AccessLevel
+getReturnType(): String
+getArgTypes(): String[]
+setName(String name): void
+setAccessLevel(AccessLevel accessLevel): void
+setReturnType(String returnType): void
+setArgTypes(String[] argTypes): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>290</y>
      <w>650</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>problem.asm::ClassMethodVisitor
--
-classModel: IClass
--
+ClassMethodVisitor(int api): ctor
+ClassMethodVisitor(int api, ClassVisitor decorated): ctor
+visitMethod(int access, String name, String desc, String signature, String[] exceptions): MethodVisitor
~addAccessLevel(IMethod method, int access): void
~addReturnType(IMethod method, String desc): void
~addArguments(IMethod method, String desc): void
+getClassModel(): IClass
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>290</y>
      <w>320</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>problem.asm::ClassUmlOutputStream
--
-out: OutputStream
--
+ClassUmlOutputStream(OutputStream out): ctor
-write(String m): void
+preVisit(IClass c): void
+postFieldsVisit(IClass c): void
+postMethodsVisit(IClass c): void
+visit(IMethod c): void
+visit(IField c): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>990</x>
      <y>290</y>
      <w>320</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.asm.model::IField
--
--
+getName(): String
+getAccessLevel(): AccessLevel
+getType(): String
+setName(String name): void
+setAccessLevel(AccessLevel accessLevel): void
+setType(String type): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>490</y>
      <w>220</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.asm.visitor::IVisitor
--
--
+preVisit(IClass c): void
+postFieldsVisit(IClass c): void
+postMethodsVisit(IClass c): void
+visit(IField b): void
+visit(IMethod e): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>230</x>
      <y>490</y>
      <w>580</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>problem.asm::ClassFieldVisitor
--
-classModel: IClass
--
+ClassFieldVisitor(int api): ctor
+ClassFieldVisitor(int api, ClassVisitor decorated): ctor
+visitField(int access, String name, String desc, String signature, Object value): FieldVisitor
+getClassModel(): IClass
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>820</x>
      <y>490</y>
      <w>240</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>/problem.asm.visitor::VisitorAdapter/
--
--
+preVisit(IClass c): void
+postFieldsVisit(IClass c): void
+postMethodsVisit(IClass c): void
+visit(IField b): void
+visit(IMethod e): void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>660</y>
      <w>650</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>problem.asm::ClassDeclarationVisitor
--
-classModel: IClass
--
+ClassDeclarationVisitor(int api): ctor
+visit(int version, int access, String name, String signature, String superName, String[] interfaces): void
+getClassModel(): IClass
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>890</x>
      <y>660</y>
      <w>230</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.asm.model::IClassHolder
--
+getClassModel(): IClass
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>790</y>
      <w>210</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
problem.asm.visitor::ITraverser
--
--
+accept(IVisitor v): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>220</x>
      <y>790</y>
      <w>190</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>problem.asm::DesignParser
--
--
+main(String[] args): void
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>